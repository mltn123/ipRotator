data2[is.na(data2)] <- 0
data$Datum <- as.Date(data$Datum)
data2$Datum<- as.Date(data2$Datum)
data3$Datum<- as.Date(data3$Datum)
colnames(data2)[2] <- "Teilnehmeranfragen"
library(scales)
ggplot(data2, aes(x=Datum, y=Teilnehmeranfragen, group=1)) +
#scale_x_date(date_labels = "%d-%m-%Y", date_breaks = "1 month")+
geom_line(mapping=aes(y=Teilnehmeranfragen,x= Datum,color="Abgeschlossene Umfragen"),size=1) +
geom_line(data3,mapping=aes(y=Teilnehmeranfragen,x= Datum,color="Begonnene Umfragen"),size=1)+
scale_color_manual(values = c(
'Begonnene Umfragen' = 'red',
'Abgeschlossene Umfragen' = 'darkblue')) +
labs(color = 'Legende')+
#theme_ipsum() +
ggtitle("Begonnene und abgeschlossene Umfragen")+
scale_x_date(labels = date_format("%d.%m"))+
ylab("Anzahl der Umfragen")
whoop_timeseries <- read_excel("C:/RDATA/Whoop/timeseries.xlsx")
ts_abgeschlossen <- filter(whoop_timeseries , Abgeschlossen == "Ja")
ts_begonnen <-  whoop_timeseries
dta <- rbind(ts_abgeschlossen,ts_begonnen)
# dta$Datum <- strftime(dta$Datum, "%d.%m")
# dta$Datum <- as.character(dta$Datum)
dta$Datum<- as.Date(dta$Datum)
dta1 <- dta %>% filter(Abgeschlossen == "Nein")
dta2 <- dta %>% filter(Abgeschlossen == "Ja")
library(tidyverse)
library(ggplot2)
library(hrbrthemes)
data <- setNames(data.frame(table(dta1$Datum)),c("Datum","Teilnehmeranfragen"))
data2 <- setNames(data.frame(table(dta2$Datum)),c("Datum","Teilnehmeranfragen"))
data3 <- setNames(data.frame(table(dta$Datum)),c("Datum","Teilnehmeranfragen"))
data2 <- merge(data2, data3,    # Merge data
by = "Datum",
all = TRUE)
data2[is.na(data2)] <- 0
data$Datum <- as.Date(data$Datum)
data2$Datum<- as.Date(data2$Datum)
data3$Datum<- as.Date(data3$Datum)
colnames(data2)[2] <- "Teilnehmeranfragen"
library(scales)
ggplot(data2, aes(x=Datum, y=Teilnehmeranfragen, group=1)) +
#scale_x_date(date_labels = "%d-%m-%Y", date_breaks = "1 month")+
geom_line(mapping=aes(y=Teilnehmeranfragen,x= Datum,color="Abgeschlossene Umfragen"),size=1) +
geom_line(data3,mapping=aes(y=Teilnehmeranfragen,x= Datum,color="Begonnene Umfragen"),size=1)+
scale_color_manual(values = c(
'Begonnene Umfragen' = 'red',
'Abgeschlossene Umfragen' = 'darkblue')) +
labs(color = 'Legende')+
#theme_ipsum() +
ggtitle("Begonnene und abgeschlossene Umfragen")+
scale_x_date(labels = date_format("%d.%m"))+
ylab("Anzahl der Umfragen")
prop.table(table(whoop$player.teilnehmer_fakultät))
prop.table(table(whoop$player.teilnehmer_beschäftigung))
table(whoop$player.motivation_lesen_sie_gerne_nachrichten)
library(scales)
ggplot(data2, aes(x=Datum, y=Teilnehmeranfragen, group=1)) +
#scale_x_date(date_labels = "%d-%m-%Y", date_breaks = "1 month")+
geom_line(mapping=aes(y=Teilnehmeranfragen,x= Datum,color="Abgeschlossene Umfragen"),size=1) +
geom_line(data3,mapping=aes(y=Teilnehmeranfragen,x= Datum,color="Begonnene Umfragen"),size=1)+
scale_color_manual(values = c(
'Begonnene Umfragen' = 'red',
'Abgeschlossene Umfragen' = 'darkblue')) +
labs(color = 'Legende')+
#theme_ipsum() +
ggtitle("Begonnene und abgeschlossene Umfragen")+
scale_x_date(labels = date_format("%d.%m"))+
ylab("Anzahl der Umfragen")
#' ---
#' title: Load data
#' author: Timo Gnambs
#' output:
#'    html_document:
#'       toc: true
#'       number_section: true
#' date: "`r Sys.time()`"
#' ---
#' **Clear workspace**
rm(list = ls())
#' **Load packages**
library(haven)
library(dplyr)
library(doBy)
library(TAM)
library(mice)
# don't convert strings into factors
options(stringsAsFactors = FALSE)
#'
#' # Load data
#'
path <- "C:/Users/Malte/Desktop/GNAMBS/Stata14/" # path to source files
version <- "9-1-1"                # SUF version
#' **Individual files**
dat1 <- read_spss(paste0(path, "SC4_xTargetCompetencies_D_", version, ".sav"))
dat2 <- read_spss(paste0(path, "SC4_pTarget_D_", version, ".sav"))
dat3 <- read_spss(paste0(path, "SC4_CohortProfile_D_", version, ".sav"))
dat4 <- read_spss(paste0(path, "SC4_pParent_D_", version, ".sav"))
dat5 <- read_spss(paste0(path, "SC4_Weights_D_", version, ".sav"))
#' **Merge data**
dat <- full_join(dat3 %>%
group_by(ID_t) %>%
summarize(sex = round(median(tx80501, na.rm = TRUE)),         # sex
birthm = round(median(tx8050m, na.rm = TRUE)),      # birth month
birthy = round(median(tx8050y, na.rm = TRUE))) %>%  # birth year
ungroup(),
dat2 %>%
group_by(ID_t) %>%
summarize(mig = round(median(t400500_g1, na.rm = TRUE)),      # migration
books = round(median(t34005a, na.rm = TRUE))) %>%   # number of books
ungroup(),
by = "ID_t")
dat <- full_join(dat,
filter(dat3, wave == 1) %>%
select(ID_t,
ID_cc, ID_i),                    # class and institution IDs
by = "ID_t")
dat <- full_join(dat,
filter(dat3, wave == 2) %>%
select(ID_t,
t723080_g1,                      # school type in grade 9
testm_w1, testy_w1),             # interview date
by = "ID_t")
dat <- left_join(dat,
select(dat1,
ID_t,
icg9101x_c, icg9102s_c, icg9103x_c, icg9104x_c, # ICT grade 9
icg9105x_c, icg9106x_c, icg9107s_c, icg9109x_c,
icg9110x_c, icg9111x_c, icg9112x_c, icg9113x_c,
icg9114x_c, icg9116x_c, icg9117s_c, icg9118x_c,
icg9119x_c, icg9121x_c, icg9122x_c, icg9123x_c,
icg9124x_c, icg9125s_c, icg9126x_c, icg9127x_c,
icg9128x_c, icg9129x_c, icg9130x_c, icg9131x_c,
icg9132x_c, icg9133s_c, icg9134x_c, icg9135x_c,
icg9136s_c, icg9137x_c, icg9138x_c, icg9140s_c,
icg9_sc1u, mpg9ic_sc6,
icg12018s_c, ica5003x_c, icg12107s_c, icg12004s_c, # ICT grade 12
icg12010x_c, icg12011x_c, ica5008x_c, icg12060s_c,
icg12013s_c, ica5018s_c, icg12016s_c, ica5019x_c,
icg12121x_c, icg12028s_c, ica5023x_c, ica5027x_c,
icg12033x_c, icg12034x_c, icg12035x_c, icg12040x_c,
icg12037s_c, icg12138s_c, icg12047s_c, icg12041x_c,
icg12046s_c, ica5021s_c, ica5052s_c, icg12048s_c,
icg12050s_c, icg12054s_c, icg12109s_c, icg12119s_c,
icg12_sc1u, mpg12ic_sc6),
by = "ID_t")
dat <- left_join(dat,
filter(dat2, wave == 3) %>%
select(ID_t,
t436300, t436360, t436150,     # gender roles
t44630d, t44613a, t44630c),
by = "ID_t")
dat <- left_join(dat,
select(dat5, ID_t, stratum_exp),          # school type of sampling frame
by = "ID_t")
suppressWarnings(
dat <- left_join(dat,
dat4 %>%
group_by(ID_t) %>%
summarize(casmin1 = round(max(p731802_g2, na.rm = TRUE)),     # CASMIN respondent
casmin2 = round(max(p731852_g2, na.rm = TRUE)),     # CASMIN partner
isei2 = round(max(p731954_g14, na.rm = TRUE)),      # ISEI respondent
isei1 = round(max(p731904_g14, na.rm = TRUE))) %>%  # ISEI partner
ungroup(),
by = "ID_t")
)
suppressWarnings(
dat <- left_join(dat,
dat2 %>%
group_by(ID_t) %>%
summarize(t731472_g14 = round(max(t731472_g14, na.rm = TRUE)),      # ISEI father
t731422_g14 = round(max(t731422_g14, na.rm = TRUE))) %>%  # ISEI mother
ungroup(),
by = "ID_t")
)
#'
#' # Recode variables
#'
#' **Sex**
dat$sex <- recodeVar(dat$sex, 1:2, c(0, 1), default = NA) # 1=female, 0=male
table(dat$sex, useNA = "always")
#' **Age**
dat$testy_w1[is.na(dat$testy_w1)] <- median(dat$testy_w1, na.rm = TRUE)
dat$testm_w1[is.na(dat$testm_w1)] <- median(dat$testm_w1, na.rm = TRUE)
x <- strptime( paste(dat$birthy, dat$birthm, "15", sep = "-"), "%Y-%m-%d")
y <- strptime( paste(dat$testy_w1, dat$testm_w1, "15", sep = "-"), "%Y-%m-%d")
dat$age <- as.numeric(difftime(y, x, units = "weeks")) / 52.1429 # approx. years
table(round(dat$age), useNA = "always")
dat <- select(dat, -birthm, -birthy, -testy_w1, -testm_w1)
rm(x, y)
#' **Migration**
dat$mig <- recodeVar(dat$mig, 0:10, c(0, rep(1, 6), rep(0, 4)), default = NA)
table(dat$mig, useNA = "always")
#' **Number of books at home**
dat$books <- recodeVar(dat$books, 1:6, 1:6, default = NA)
table(dat$books, useNA = "always")
#' **Gender roles**
# Women and men should have the same household obligations.
dat$role1 <- recodeVar(dat$t436300, 1:4, 1:4, default = NA)
# Girls can use technical devices as well as boys.
dat$role2 <- recodeVar(dat$t436360, 1:4, 1:4, default = NA)
# Girls should be able to train for the same professions as boys.
dat$role3 <- recodeVar(dat$t436150, 1:4, 1:4, default = NA)
# Men are better suited for certain jobs than women.
dat$role4 <- recodeVar(dat$t44630c, 1:4, 4:1, default = NA)
# It's the man's job to earn money and the woman's job to take care of the household and family.
dat$role5 <- recodeVar(dat$t44613a, 1:4, 4:1, default = NA)
# The number of women in politics should be the same as the number of men.
dat$role6 <- recodeVar(dat$t44630d, 1:4, 1:4, default = NA)
dat <- select(dat, -t436300, -t436360, -t436150, -t44630d, -t44613a, -t44630c)
# estimate WLE for role orientation
mod <- tam.mml.2pl(resp = dat[, paste0("role", 1:6)], irtmodel = "GPCM",
control = list(increment.factor = 1.2),
pid = dat$ID_t, verbose = FALSE)
wle <- tam.wle(mod, Msteps = 500) # WLE
dat <- left_join(dat, select(wle, pid, theta),
by = c("ID_t" = "pid")) %>%
rename(role = theta)
rm(mod, wle)
# interaction between sex and role orientation
dat$sexXrole <- dat$sex * dat$role
#' **Highest CASMIN of parents**
suppressWarnings(dat$casmin <- apply(select(dat, casmin1, casmin2), 1, max, na.rm = TRUE))
dat$casmin[is.infinite(dat$casmin)] <- NA
table(dat$casmin, useNA = "always")
dat <- select(dat, -casmin1, -casmin2)
#' **Highest ISEI of parents**
suppressWarnings(dat$isei <- apply(select(dat, isei1, isei2), 1, max, na.rm = TRUE)) # from parent questionnaire
dat$isei[is.infinite(dat$isei)] <- NA
suppressWarnings(dat$iseiB <- apply(select(dat, t731472_g14, t731422_g14), 1, max, na.rm = TRUE)) # from student questionnaire
dat$iseiB[is.infinite(dat$iseiB)] <- NA
dat$isei[is.na(dat$isei)] <- dat$iseiB[is.na(dat$isei)]
table(round(dat$isei), useNA = "always")
dat <- select(dat, -t731472_g14, -t731422_g14, -isei1, -isei2, -iseiB)
#' **School type**
dat$school <- recodeVar(dat$t723080_g1, 3:17, c(1, 2, 9, 1, 2, 9, 3, 4, 9, 1, 2, 3, 9, 9, 9),
default = 9, keep.na = FALSE)
# 1 = Hauptschule, 2 = Realschule, 3 = Gymnasium, 4 = Förderschule, 9 = other
dat$school_exp <- recodeVar(dat$stratum_exp, 1:8, c(3, 2, 1, 9, 4, rep(9, 3)),
default = 9, keep.na = FALSE)
dat$school[is.na(dat$school)] <- dat$school_exp[is.na(dat$school)]
table(dat$school, useNA = "always")
dat$school1 <- ifelse(dat$school == 1, 1, 0)
dat$school2 <- ifelse(dat$school == 2, 1, 0)
dat$school3 <- ifelse(dat$school == 9, 1, 0)
dat <- select(dat, -t723080_g1, -stratum_exp, -school_exp)
# subjective ICT
dat$sict1 <- dat$mpg9ic_sc6
dat$sict2 <- dat$mpg12ic_sc6
table(dat$sict1)
table(dat$sict2)
#'
#' # Select cases
#'
# valid ICT score in grade 9
dat <- filter(dat, !is.na(icg9_sc1u) & !is.na(sict1))
#'
#' # Create imputed dataset
#'
# valid school type
table(dat$school, useNA = "always")
# valid covariates
table(is.na(dat$sict1)) %>% print() %>% prop.table() %>% round(3)
table(is.na(dat$sict2)) %>% print() %>% prop.table() %>% round(3)
table(is.na(dat$sex)) %>% print() %>% prop.table() %>% round(3)
table(is.na(dat$age)) %>% print() %>% prop.table() %>% round(3)
table(is.na(dat$mig)) %>% print() %>% prop.table() %>% round(3)
table(is.na(dat$books)) %>% print() %>% prop.table() %>% round(3)
table(is.na(dat$isei)) %>% print() %>% prop.table() %>% round(3)
table(is.na(dat$casmin)) %>% print() %>% prop.table() %>% round(3)
table(is.na(dat$role)) %>% print() %>% prop.table() %>% round(3)
table(is.na(dat$sexXrole)) %>% print() %>% prop.table() %>% round(3)
# impute missing  values in covariates and role orientations
sel <- c("ID_t", "icg9_sc1u", "sict1", "sex", "age", "mig", "books", "isei",
"school1", "school2", "school3", "role", "sexXrole")
md.pattern(dat[, sel])
predMat <- 1 - diag(1, length(sel) - 1, length(sel) - 1)
predMat <- cbind(0, rbind(0, predMat))
datI <- mice(dat[, sel], m = 20, visiteSequence = "monotone",
predictorMatrix = predMat, printFlag = FALSE, seed = 235)
datI <- lapply(complete(datI, "all"),
function(imp) {
vars <- c("mig", "books", "isei", "role", "sexXrole")
left_join(select(dat, -one_of(vars)),
select(imp, ID_t, one_of(vars)),
by = "ID_t")
})
rm(sel, predMat)
#'
#' # Save data
#'
save(dat, datI, file = "data/data.Rdata")
round(max(p731802_g2, na.rm = TRUE)
round(max(p731802_g2, na.rm = TRUE))
round(max(dat4$p731802_g2, na.rm = TRUE))
dat4 %>%
group_by(ID_t) %>%
summarize(casmin1 = round(max(p731802_g2, na.rm = TRUE)),     # CASMIN respondent
casmin2 = round(max(p731852_g2, na.rm = TRUE)),     # CASMIN partner
isei2 = round(max(p731954_g14, na.rm = TRUE)),      # ISEI respondent
isei1 = round(max(p731904_g14, na.rm = TRUE))) %>%  # ISEI partner
ungroup(),
by = "ID_t")
group_by(ID_t) %>%
summarize(casmin1 = round(max(p731802_g2, na.rm = TRUE)),     # CASMIN respondent
casmin2 = round(max(p731852_g2, na.rm = TRUE)),     # CASMIN partner
isei2 = round(max(p731954_g14, na.rm = TRUE)),      # ISEI respondent
isei1 = round(max(p731904_g14, na.rm = TRUE))) %>%  # ISEI partner
ungroup(),
suppressWarnings(
dat <- left_join(dat,
dat4 %>%
group_by(ID_t) %>%
summarize(casmin1 = round(max(p731802_g2, na.rm = TRUE)),     # CASMIN respondent
casmin2 = round(max(p731852_g2, na.rm = TRUE)),     # CASMIN partner
isei2 = round(max(p731954_g14, na.rm = TRUE)),      # ISEI respondent
isei1 = round(max(p731904_g14, na.rm = TRUE))) %>%  # ISEI partner
ungroup(),
by = "ID_t")
)
dat4 %>%
group_by(ID_t) %>%
summarize(casmin1 = round(max(p731802_g2, na.rm = TRUE)),     # CASMIN respondent
casmin2 = round(max(p731852_g2, na.rm = TRUE)),     # CASMIN partner
isei2 = round(max(p731954_g14, na.rm = TRUE)),      # ISEI respondent
isei1 = round(max(p731904_g14, na.rm = TRUE))) %>%  # ISEI partner
ungroup(),
by = "ID_t")
dat4 %>%
group_by(ID_t) %>%
summarize(casmin1 = round(max(p731802_g2, na.rm = TRUE)),     # CASMIN respondent
casmin2 = round(max(p731852_g2, na.rm = TRUE)),     # CASMIN partner
isei2 = round(max(p731954_g14, na.rm = TRUE)),      # ISEI respondent
isei1 = round(max(p731904_g14, na.rm = TRUE))) %>%  # ISEI partner
ungroup()
summarize(casmin1 = round(max(p731802_g2, na.rm = TRUE)),     # CASMIN respondent
casmin2 = round(max(p731852_g2, na.rm = TRUE)),     # CASMIN partner
isei2 = round(max(p731954_g14, na.rm = TRUE)),      # ISEI respondent
isei1 = round(max(p731904_g14, na.rm = TRUE))) %>%  # ISEI partner
dat4 %>%
group_by(ID_t) %>%
summarize(casmin1 = round(max(p731802_g2, na.rm = TRUE)),     # CASMIN respondent
casmin2 = round(max(p731852_g2, na.rm = TRUE)),     # CASMIN partner
isei2 = round(max(p731954_g14, na.rm = TRUE)),      # ISEI respondent
isei1 = round(max(p731904_g14, na.rm = TRUE)))   # ISEI partner
summarize(dat4$p731802_g2)
dat$p731802_g2
dat4$p731802_g2
table(dat4$p731802_g2)
test <- summarize(round(max(dat4$p731802_g2), round((max(dat4$p731852_g2))))
test <- summarize(round(max(dat4$p731802_g2), round((max(dat4$p731852_g2)))
test <- summarize(round(max(dat4$p731802_g2)), round(max(dat4$p731852_g2)))
table dat4$p731852_g2
table dat4$p731852_g2
table(dat4$p731852_g2)
table(dat4$p731802_g2)
summarize(casmin1 = round(max(p731802_g2)),     # CASMIN respondent
casmin2 = round(max(p731852_g2)),)
dat4 %>%
group_by(ID_t) %>%
summarize(casmin1 = round(max(p731802_g2)),     # CASMIN respondent
casmin2 = round(max(p731852_g2)),)     # CASMIN partner
dat4 %>%
group_by(ID_t) %>%
summarize(casmin1 = round(max(p731802_g2, na.rm = TRUE)),     # CASMIN respondent
casmin2 = round(max(p731852_g2, na.rm = TRUE)))     # CASMIN partner
dat4 %>%
group_by(ID_t) %>%
casmin1 <- p731802_g2 %>% drop_na()
casmin2 <- p731852_g2  %>% drop_na()
summarize(casmin1 = round(max(casmin1)),     # CASMIN respondent
casmin2 = round(max(casmin2)))     # CASMIN partner
casmin1 <- p731802_g2 %>% drop_na()
casmin1 <- drop_na(p731802_g2 )
casmin1 <- na.omit(p731802_g2)
casmin1 <- na.omit(dat4$p731802_g2)
dat4 %>%
group_by(ID_t) %>%
casmin1 <- na.omit(dat4$p731802_g2)
casmin2 <-na.omit(dat4$p731852_g2)
summarize(casmin1 = round(max(casmin1)),     # CASMIN respondent
casmin2 = round(max(casmin2)))     # CASMIN partner
summarize(casmin1 = round(max(casmin1)),     # CASMIN respondent
casmin2 = round(max(casmin2)))     # CASMIN partner
#' ---
#' title: Load data
#' author: Timo Gnambs
#' output:
#'    html_document:
#'       toc: true
#'       number_section: true
#' date: "`r Sys.time()`"
#' ---
#' **Clear workspace**
rm(list = ls())
#' **Load packages**
library(haven)
library(dplyr)
library(doBy)
library(TAM)
library(mice)
# don't convert strings into factors
options(stringsAsFactors = FALSE)
#'
#' # Load data
#'
path <- "C:/Users/Malte/Desktop/GNAMBS/Stata14/" # path to source files
version <- "9-1-1"                # SUF version
#' **Individual files**
dat1 <- read_spss(paste0(path, "SC4_xTargetCompetencies_D_", version, ".sav"))
dat2 <- read_spss(paste0(path, "SC4_pTarget_D_", version, ".sav"))
dat3 <- read_spss(paste0(path, "SC4_CohortProfile_D_", version, ".sav"))
dat4 <- read_spss(paste0(path, "SC4_pParent_D_", version, ".sav"))
dat5 <- read_spss(paste0(path, "SC4_Weights_D_", version, ".sav"))
#' ---
#' title: Load data
#' author: Timo Gnambs
#' output:
#'    html_document:
#'       toc: true
#'       number_section: true
#' date: "`r Sys.time()`"
#' ---
#' **Clear workspace**
rm(list = ls())
#' **Load packages**
library(haven)
library(dplyr)
library(doBy)
library(TAM)
library(mice)
# don't convert strings into factors
options(stringsAsFactors = FALSE)
#'
#' # Load data
#'
path <- "C:/Users/Malte/Desktop/GNAMBS/Stata14/" # path to source files
version <- "9-1-1"                # SUF version
#' **Individual files**
dat1 <- read_spss(paste0(path, "SC4_xTargetCompetencies_D_", version, ".sav"))
dat2 <- read_spss(paste0(path, "SC4_pTarget_D_", version, ".sav"))
dat3 <- read_spss(paste0(path, "SC4_CohortProfile_D_", version, ".sav"))
dat4 <- read_spss(paste0(path, "SC4_pParent_D_", version, ".sav"))
dat5 <- read_spss(paste0(path, "SC4_Weights_D_", version, ".sav"))
View(dat3)
View(dat2)
View(dat3)
View(dat3)
shinyuieditor::launch_editor(app_loc = "C:/Users/Malte/Desktop/shiny/new-app/")
devtools::create("ipRotator")
get_wd
get_wd()
set_wd
getwd()
set_wd(C:/Users/Malte/Desktop/ipRotator)
set_wd("C:/Users/Malte/Desktop/ipRotator")
setwd("C:/Users/Malte/Desktop/ipRotator")
getwd()
devtools::create("ipRotator")
devtools::document()
getwd()
setwd(C:/Users/Malte/Desktop/ipRotator/ipRotator)
setwd("C:/Users/Malte/Desktop/ipRotator/ipRotator")
devtools::document()
?run_all
library(ipRotator)
library(ipRotator.)
library(ipRotator)
devtools::document()
?run_all
?NAMESPACE
library(ipRotator)
devtools::use_vignette("introduction")
usethat::use_vignette("introduction")
library(devtools)
usethat::use_vignette("introduction")
devtools::use_vignette("introduction")
load_all(.)
load_all(".")
library(devools)
library(devtools)
load_all(".")
iprotatoR
?iprRotator
library(ipRotator)
?run_all
?roxygen2
?roxygen
library(roxygen2)
?roxygen2
vignette("rd-other"
vignette("rd-other")
browseVignettes()
usethis::use_vignette("iprotatoR-vignette")
library(ipRotator)
Sys.setenv(LANG = "en")
library(ipRotator)
devtools::install_github("mltn123/ipRotator")
?paws
library(paws)
?paws
?version(paws)
?apigateway
?stringr
devtools::install_github("mltn123/ipRotator")
devtools::install_github("mltn123/ipRotator")
devtools::install_github("mltn123/ipRotator")
devtools::install_github("mltn123/ipRotator")
?run_all
library(ipRotator)
?run_all
